generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())

  tests Test[]
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  code        String   @unique
  status      String
  createdAt   DateTime @default(now())
  description String?

  versions Version[] // A project can have many versions
}

model Version {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())

  project   Project @relation(fields: [projectId], references: [id]) // Relation to Project
  projectId Int

  installations Installation[] // A version can have many installation
  features      Feature[] // A version can have many features

  @@unique([projectId, name])
}

model Customer {
  id   Int    @id @default(autoincrement())
  name String @unique

  installations Installation[]
}

model Installation {
  id         Int      @id @default(autoincrement())
  customer   Customer @relation(fields: [customerId], references: [id]) // Relation to Customer
  customerId Int

  version   Version @relation(fields: [versionId], references: [id]) // Relation to Version
  versionId Int

  installationDate DateTime
  createdAt        DateTime @default(now())

  @@unique([customerId, versionId])
}

model Feature {
  id          Int    @id @default(autoincrement())
  name        String
  description String

  version   Version @relation(fields: [versionId], references: [id]) // Relation to Version
  versionId Int

  requirements Requirement[]

  @@unique([name, versionId])
}

model Requirement {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  status      String
  priority    String

  feature   Feature @relation(fields: [featureId], references: [id])
  featureId Int

  scenarios Scenario[]

  @@unique([description, featureId])
}

model Scenario {
  id       Int    @id @default(autoincrement())
  name     String
  scenario String

  requirement   Requirement @relation(fields: [requirementId], references: [id]) // Relation to Version
  requirementId Int

  tests Test[]

  @@unique([name, requirementId])
}

model Test {
  id             Int      @id @default(autoincrement())
  type           String
  status         String
  execution_date DateTime
  owner          User     @relation(fields: [ownerId], references: [id]) // Relation to Version
  ownerId        Int

  scenarios Scenario[]
}
